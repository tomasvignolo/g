<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>